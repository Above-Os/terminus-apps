apiVersion: v1
kind: ServiceAccount
metadata:
  name: twitter-cluster-account
  namespace:  {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twitter-cluster-role
rules:
- apiGroups: 
    - '*'            
  resources: 
    - statefulsets
    - daemonsets
    - namespaces   
    - serviceaccounts/token
  verbs: 
    - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twitter-cluster-binding
subjects:
- kind: ServiceAccount
  name: twitter-cluster-account
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: twitter-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: twitter
  namespace: {{ .Release.Namespace }}
  labels:
    app: twitter
    applications.app.bytetrade.io/author: bytetrade.io
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: twitter
  template:
    metadata:
      labels:
        app: twitter
    spec:
      serviceAccountName: twitter-cluster-account
      serviceAccount: twitter-cluster-account
      securityContext:
        runAsUser: 0
        runAsNonRoot: false

      containers:
      - name: twitter
        image: "beclab/python-crawl-server:v0.0.0.10.23.6"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000

        ports:
        - containerPort: 3060
        
        resources:
          requests:
            cpu: 20m
            memory: 50Mi
          limits:
            cpu: "1"
            memory: 300Mi
            
      

          
---

apiVersion: v1
kind: Service
metadata:
  name: twitter-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: twitter
  ports:
    - name: twitter-server
      protocol: TCP
      port: 3060
      targetPort: 3060
