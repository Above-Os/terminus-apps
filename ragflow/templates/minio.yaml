apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      initContainers:
      - name: init-chmod-data
        image: 'docker.io/aboveos/busybox:latest'
        command:
          - sh
          - '-c'
          - |
            chown -R 1000:1000 /appcache
        resources: {}
        volumeMounts:
          - name:  appcache
            mountPath: /appcache
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
      containers:
      - name: minio
        image: quay.io/minio/minio:RELEASE.2023-12-20T01-00-02Z
        args: ["server", "--console-address", ":9001", "/data"]
        ports:
        - containerPort: 9000
        env:
        - name: MINIO_ROOT_USER
          value: "rag_flow"
        - name: MINIO_ROOT_PASSWORD
          value: "infini_rag_flow"
        volumeMounts:
        - name: minio-data
          mountPath: /data
        resources:
          limits:
            cpu: "1"
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 512Mi
      volumes:
      - hostPath:
          path: '{{ .Values.userspace.appCache }}/ragflow'
          type: DirectoryOrCreate
        name: appcache
      - hostPath:
          path: '{{ .Values.userspace.appCache }}/ragflow/minio'
          type: DirectoryOrCreate
        name: minio-data
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: minio