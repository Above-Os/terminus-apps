# Copyright 2022 bytetrade
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{{- $mysql_pwd := randAlphaNum 16 -}}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Release.Namespace }}
  name: ns-kubectl

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Namespace }}:kubectl-ops
subjects:
  - kind: ServiceAccount
    namespace: {{ .Release.Namespace }}
    name: ns-kubectl
roleRef:
  kind: Role
  name: admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: portfolio-mysql
  template:
    metadata:
      labels:
        app: portfolio-mysql
    spec:
      serviceAccountName: ns-kubectl
      serviceAccount: ns-kubectl
      containers:
      - name: mysql
        image: mysql:8.0.31
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        volumeMounts:
        - name: mysql-init
          mountPath: /docker-entrypoint-initdb.d
        - name: mysql-db
          mountPath: /var/lib/mysql
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - "while [ ! -f /var/run/mysqld/mysqld.pid ]; do sleep 1; done"
      volumes:
      - name: mysql-db
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.appdata}}/portfolio/db
      - name: mysql-init
        configMap:
          name: portfolio-init-sql
          defaultMode: 438

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: portfolio
  template:
    metadata:
      labels:
        app: portfolio
    spec:
      initContainers:
      - name: wait-for
        image: ghcr.io/patrickdappollonio/wait-for:v1.0.0
        command:
          - /wait-for
        args:
          - --host="portfolio-mysql:3306"
          - --timeout=10s
          - --verbose
      containers:
      - name: portfolio-frontend
        image: ghcr.io/above-os/portfolio:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 500m
            memory: 1.5Gi
          limits:
            cpu: 1000m
            memory: 2.5Gi
        ports:
        - containerPort: 80

      - name: waas-trader-http
        image: ghcr.io/above-os/trader-http:v0.1.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6001
        env:
          - name: IS_IN_OS
            value: 'true'
        volumeMounts:
        - mountPath: /traderhttp/config/mysql.json
          name: trade-config
          subPath: mysql.json

      - name: portfolio-server
        image: ghcr.io/above-os/portfolio-server:v0.1.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5030
        env:
        - name: OS_SYSTEM_SERVER
          value: system-server.user-system-{{ .Values.bfl.username }}
        - name: OS_APP_SECRET
          value: '{{ .Values.os.appSecret }}'
        - name: OS_APP_KEY
          value: {{ .Values.os.appKey }}
        volumeMounts:
        - name: portfolio-data
          mountPath: /portfolio/packages/server/data
        - mountPath: /script/restart.sh
          name: restart-script
          subPath: restart.sh
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - "while [ ! -f /tmp/running ]; do curl http://127.0.0.1:5030/portfolio/ping 1>/dev/null 2>&1 && touch /tmp/running; sleep 1; done"

      - name: waas-cex-sync
        image: ghcr.io/above-os/waas-cex-sync:v0.1.6
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3031
        volumeMounts:
        - mountPath: /opt/run/config.json
          name: cex-config
          subPath: config.json

      volumes:
      - name: portfolio-data
        hostPath:
          type: DirectoryOrCreate
          path: {{ .Values.userspace.appdata}}/portfolio/data
      - name: trade-config
        configMap:
          name: trader-http-config
          defaultMode: 438
          items:
          - key: mysql.json
            path: mysql.json
      - name: cex-config
        configMap:
          name: cex-sync-config
          defaultMode: 438
          items:
          - key: config.json
            path: config.json
      - name: restart-script
        configMap:
          name: cex-restart-script
          defaultMode: 438
          items:
          - key: restart.sh
            path: restart.sh

---
apiVersion: v1
kind: Service
metadata:
  name: portfolio-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: portfolio
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: portfolio-api-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: portfolio
  ports:
    - protocol: TCP
      port: 80
      targetPort: 6001

---
apiVersion: v1
kind: Service
metadata:
  name: portfolio-mysql
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: portfolio-mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---
apiVersion: v1
data:
  restart.sh: |
    #!/bin/bash
    kubectl exec -t $(kubectl get pods -n {{ .Release.Namespace }} -l "app=portfolio" -o jsonpath="{.items[0].metadata.name}") -n {{ .Release.Namespace }} -c waas-cex-sync -- kill 1
kind: ConfigMap
metadata:
  name: cex-restart-script
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
data:
  mysql.json: |
    {
      "development": {
        "host": "portfolio-mysql",
        "user": "debian-sys-maint",
        "password": "{{ $mysql_pwd }}",
        "database": "portfolio",
        "connectionLimit": 100
      },
      "production": {
        "host": "portfolio-mysql",
        "user": "debian-sys-maint",
        "password": "{{ $mysql_pwd }}",
        "database": "portfolio",
        "connectionLimit": 200
      }
    }
kind: ConfigMap
metadata:
  name: trader-http-config
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
data:
  config.json: |
    {
        "debug": true,
        "process": {
            "file_limit": 1000000,
            "core_limit": 1000000000
        },
        "log": {
            "path": "./log/log",
            "flag": "fatal,error,warn,info,trace,debug",
            "num": 10
        },
        "name":"binance_future_query",
        "trader_mode" : "_",
        "exchanges": [

        ],

        "customer":2,
        "taker_leverage":10.0,
        "maker_leverage":10.0,

        "wallet_limit":"1",
        "maker_tick_interval":10,
        "consider_hedgeable":false,
        "not_hedge":true,

        "notifys" : {
            "urls" : ["https://open.feishu.cn/open-apis/bot/hook/b97b8bb7-896c-4d7c-9f7c-5a689074b3a2"],
            "tag" : "TestEnv"
        },
        "use_mysql" : true,
        "db": {
            "host": "portfolio-mysql",
            "user": "debian-sys-maint",
            "pass": "{{ $mysql_pwd }}",
            "name": "portfolio"
        },
        "history_thread" : 4,
          "svr": {
            "bind": [
                "tcp@0.0.0.0:3031",
                "udp@0.0.0.0:3031"
            ],
            "buf_limit": 100,
            "max_pkg_size": 1024000,
            "heartbeat_check": false
        },
      "use_http_config": true,
      "http_config_url": "http://127.0.0.1:5030/portfolio/exchange/list",
      "nacos_address": "3.239.118.39:8848",
      "nacos_key": "binance_trans_account_sync",
      "nacos_group" :"DEFAULT_GROUP",
      "nacos_namespace" : "09a56d28-c3fc-451b-aff3-8abd04862746",
      "brokers": "kafka:9092"
    }
kind: ConfigMap
metadata:
  name: cex-sync-config
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
data:
  init.sql: |
    create database if not exists portfolio;

    use portfolio;
    CREATE TABLE IF NOT EXISTS `trans`(
                                          `id` VARCHAR(100) NOT NULL,
                                          `type` VARCHAR(40) NOT NULL,
                                          `portfolio` VARCHAR(40) NOT NULL,
                                          `cparty` VARCHAR(40) NOT NULL,
                                          `transId` VARCHAR(100) NOT NULL,
                                          `exchange` VARCHAR(40) NOT NULL,
                                          `trader` VARCHAR(100) NOT NULL,
                                          `optionStyle` VARCHAR(40) NOT NULL,
                                          `instrument` VARCHAR(100) NOT NULL,
                                          `maturityDate` bigint(64) NOT NULL,
                                          `productId` VARCHAR(40) NOT NULL,
                                          `base` VARCHAR(40) NOT NULL,
                                          `quote` VARCHAR(40) NOT NULL,
                                          `settleCcy` VARCHAR(40) NOT NULL,
                                          `orderId` VARCHAR(100) NOT NULL,
                                          `makerTaker` VARCHAR(10) NOT NULL,
                                          `side` VARCHAR(40) NOT NULL,
                                          `amount` decimal(40,10) NOT NULL,
                                          `balance` decimal(40,10) NOT NULL,
                                          `cashFlow` decimal(40,10) NOT NULL,
                                          `change` decimal(40,10) NOT NULL,
                                          `equity` decimal(40,10) NOT NULL,
                                          `feeBalance` decimal(40,10) NOT NULL,
                                          `feeChanged` decimal(40,10) NOT NULL,
                                          `feeRate` decimal(40,10) NOT NULL,
                                          `interestPl` decimal(40,10) NOT NULL,
                                          `marketPrice` decimal(40,10) NOT NULL,
                                          `position` decimal(40,10) NOT NULL,
                                          `price` decimal(40,10) NOT NULL,
                                          `remarks` VARCHAR(200) NOT NULL,
                                          `rawMsg` VARCHAR(5000) NOT NULL,
                                          `tradeDate`  bigint(64) NOT NULL,
                                          `tradeExecDate`  VARCHAR(40) NOT NULL,
                                          `refreshTimestamp`  bigint(64) NOT NULL,
                                          PRIMARY KEY ( `id` ), 
                                          key (type),
                                          key (tradeDate),
                                          key (exchange),
                                          key (trader),
                                          key (portfolio),
                                          key (instrument)
    )ENGINE=InnoDB DEFAULT CHARSET=utf8;


    CREATE TABLE IF NOT EXISTS `orders`(
                                           `id` VARCHAR(100) NOT NULL,
                                           `type` VARCHAR(40) NOT NULL,
                                           `portfolio` VARCHAR(40) NOT NULL,
                                           `cparty` VARCHAR(40) NOT NULL,
                                           `clientId` VARCHAR(100) NOT NULL,
                                           `exchange` VARCHAR(40) NOT NULL,
                                           `trader` VARCHAR(100) NOT NULL,
                                           `optionStyle` VARCHAR(40) NOT NULL,
                                           `instrument` VARCHAR(100) NOT NULL,
                                           `maturityDate` bigint(64) NOT NULL,
                                           `productId` VARCHAR(40) NOT NULL,
                                           `base` VARCHAR(40) NOT NULL,
                                           `quote` VARCHAR(40) NOT NULL,
                                           `settleCcy` VARCHAR(40) NOT NULL,
                                           `orderId` VARCHAR(100) NOT NULL,
                                           `orderType` VARCHAR(100) NOT NULL,
                                           `side` VARCHAR(40) NOT NULL,
                                           `feeCoin` VARCHAR(40) NOT NULL,
                                           `size` decimal(40,10) NOT NULL,
                                           `quoteSize` decimal(40,10) NOT NULL,
                                           `sizeFilled` decimal(40,10) NOT NULL,
                                           `quoteSizeFilled` decimal(40,10) NOT NULL,
                                           `price` decimal(40,10) NOT NULL,
                                           `filledPrice` decimal(40,10) NOT NULL,
                                           `filledFee` decimal(40,10) NOT NULL,
                                           `feeRate` decimal(40,10) NOT NULL,
                                           `reduceOnly` bool NOT NULL,
                                           `postOnly` bool NOT NULL,
                                           `status` VARCHAR(40),
                                           `remarks` VARCHAR(200) NOT NULL,
                                           `rawMsg` VARCHAR(5000) NOT NULL,
                                           `createDate`  bigint(64) NOT NULL,
                                           `updateDate`  bigint(64) NOT NULL,
                                           `refreshTimestamp`  bigint(64) NOT NULL,
                                           PRIMARY KEY ( `id` ),
                                           key (type),
                                           key (createDate),
                                           key (exchange),
                                           key (trader),
                                           key (portfolio),
                                           key (instrument)
    )ENGINE=InnoDB DEFAULT CHARSET=utf8;


    CREATE TABLE IF NOT EXISTS `price`(
                                          `id` VARCHAR(100) NOT NULL,
                                          `type` VARCHAR(40) NOT NULL,
                                          `exchange` VARCHAR(40) NOT NULL,
                                          `instrument` VARCHAR(40) NOT NULL,
                                          `optionStyle` VARCHAR(40) NOT NULL,
                                          `base` VARCHAR(40) NOT NULL,
                                          `quote` VARCHAR(40) NOT NULL,
                                          `marketPrice` decimal(40,10) NOT NULL,
                                          `rawMsg` VARCHAR(5000) NOT NULL,
                                          `refreshTimestamp`  bigint(64) NOT NULL,
                                          PRIMARY KEY ( `id` ),
                                          key (type),
                                          key (exchange),
                                          key (instrument)
    )ENGINE=InnoDB DEFAULT CHARSET=utf8;



    CREATE TABLE IF NOT EXISTS `position`(
                                          `id`  bigint(64) NOT NULL AUTO_INCREMENT,
                                          `marginType` VARCHAR(40) NOT NULL,
                                          `portfolio` VARCHAR(40) NOT NULL,
                                          `cparty` VARCHAR(40) NOT NULL,
                                          `exchange` VARCHAR(40) NOT NULL,
                                          `trader` VARCHAR(100) NOT NULL,
                                          `optionStyle` VARCHAR(40) NOT NULL,
                                          `instrument` VARCHAR(40) NOT NULL,
                                          `maturityDate` bigint(64) NOT NULL,
                                          `productId` VARCHAR(40) NOT NULL,
                                          `baseCcy` VARCHAR(40) NOT NULL,
                                          `quoteCcy` VARCHAR(40) NOT NULL,
                                          `settleCcy` VARCHAR(40) NOT NULL,
                                          `contractType` VARCHAR(40) NOT NULL,
                                          `positionSide` VARCHAR(40) NOT NULL,
                                          `amount` decimal(40,10) NOT NULL,
                                          `notional` decimal(40,10) NOT NULL,
                                          `initialMargin` decimal(40,10) NOT NULL,
                                          `maintenanceMargin` decimal(40,10) NOT NULL,
                                          `leverage` decimal(40,10) NOT NULL,
                                          `openPrice` decimal(40,10) NOT NULL,
                                          `realizedPnl` decimal(40,10) NOT NULL,
                                          `unrealizedPnl` decimal(40,10) NOT NULL,
                                          `delta` decimal(40,10) NOT NULL,
                                          `gamma` decimal(40,10) NOT NULL,
                                          `theta` decimal(40,10) NOT NULL,
                                          `vega` decimal(40,10) NOT NULL,
                                          `rho` decimal(40,10) NOT NULL,
                                          `marketPrice` decimal(40,10) NOT NULL,
                                          `indexPrice` decimal(40,10) NOT NULL,
                                          `remarks` VARCHAR(200) NOT NULL,
                                          `rawMsg` VARCHAR(5000) NOT NULL,
                                          `refreshTimestamp`  bigint(64) NOT NULL,
                                          PRIMARY KEY ( `id` ),
                                          key (exchange),
                                          key (contractType),
                                          key (instrument),
                                          key (refreshTimestamp)
    )ENGINE=InnoDB DEFAULT CHARSET=utf8;





    CREATE TABLE IF NOT EXISTS `balance`(
                                            `id`  bigint(64) NOT NULL AUTO_INCREMENT,
                                            `portfolio` VARCHAR(40) NOT NULL,
                                            `cparty` VARCHAR(40) NOT NULL,
                                            `exchange` VARCHAR(40) NOT NULL,
                                            `walletType` VARCHAR(40) NOT NULL,
                                            `trader` VARCHAR(100) NOT NULL,
                                            `coinName` VARCHAR(40) NOT NULL,
                                            `total` decimal(40,10) NOT NULL,
                                            `available` decimal(40,10) NOT NULL,
                                            `used` decimal(40,10) NOT NULL,
                                            `borrowed` decimal(40,10) NOT NULL,
                                            `canBorrowed` decimal(40,10) NOT NULL,
                                            `remarks` VARCHAR(200) NOT NULL,
                                            `rawMsg` VARCHAR(5000) NOT NULL,
                                            `refreshTimestamp`  bigint(64) NOT NULL,
                                            PRIMARY KEY ( `id` ),
                                            key (exchange),
                                            key (coinName),
                                            key (refreshTimestamp)
    )ENGINE=InnoDB DEFAULT CHARSET=utf8;

  user.sql: |
    CREATE USER IF NOT EXISTS 'debian-sys-maint'@'%' IDENTIFIED BY '{{ $mysql_pwd }}';
    GRANT ALL PRIVILEGES ON portfolio.* TO 'debian-sys-maint'@'%';

kind: ConfigMap
metadata:
  name: portfolio-init-sql
  namespace: {{ .Release.Namespace }}

---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: portfolio-key-provider
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: key
  deployment: {{ .Release.Name }}
  description: portfolio restful data interface
  endpoint: portfolio-api-svc.{{ .Release.Namespace }}
  group: portfolio
  kind: provider
  namespace: {{ .Release.Namespace }}
  opApis:
  - name: MarketInfo
    uri: /trade/getMarketInfo
  - name: SubMarkets
    uri: /trade/getSubMarkets
  - name: Depth
    uri: /trade/getDepth
  - name: Deal
    uri: /trade/getDeal
  - name: SupportAccount
    uri: /trade/getSupportAccount
  - name: OpenOrder
    uri: /trade/getOpenOrder
  - name: Account
    uri: /trade/getAccount
  - name: Trans
    uri: /trade/trans
  - name: Prices
    uri: /trade/prices
  - name: CreateOrder
    uri: /trade/createOrder
  - name: CancelOrder
    uri: /trade/cancelOrder
  - name: AddSubMarkets
    uri: /trade/addSubMarkets
  - name: RemoveSubMarkets
    uri: /trade/removeSubMarkets
  version: v1
status:
  state: active
