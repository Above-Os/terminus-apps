apiVersion: v1
data:
  config.json: |
    {
        "debug": true,
        "process": {
            "file_limit": 1000000,
            "core_limit": 1000000000
        },
        "log": {
            "path": "/ws-data/log/accessws",
            "flag": "fatal,error,warn,info,debug,trace",
            "num": 10
        },
        "alert": {
            "host": "accessws",
            "addr": "127.0.0.1:4444"
        },
        "svr": {
            "bind": [
                "stream@/tmp/accessws.sock"
            ],
            "max_pkg_size": 102400,
            "protocol": "chat"
        },
        "monitor": {
            "bind": "tcp@0.0.0.0:8091",
            "max_pkg_size": 1024
        },
        "subscribe": {
            "name": "subscribe",
            "addr": [
                "tcp@127.0.0.1:3031"
            ],
            "max_pkg_size": 2000000
        },
        "worker_num": 1,
        "timeout": 2,
        "use_market_port": false,
        "deals": {
            "brokers": "kafka:9092",
            "topic": "deals",
            "partition": 0,
            "group" : "ws"
        },
        "trade": {
            "brokers": "kafka:9092",
            "topic": "trades",
            "partition": 0,
            "group" : "ws"
        },
        "kline": {
            "brokers": "kafka:9092",
            "topic": "kline",
            "partition": 0,
            "group" : "ws"
        },
        "orders": {
            "brokers": "kafka:9092",
            "topic": "orders",
            "partition": 0,
            "group" : "ws"
        },
        "depth": {
            "brokers": "kafka:9092",
            "topic": "depth",
            "partition": 0,
            "group" : "ws"
        },
        "balances": {
            "brokers": "kafka:9092",
            "topic": "balances",
            "partition": 0,
            "group" : "ws"
        },
        "tickers": {
            "brokers": "kafka:9092",
            "topic": "tickers",
            "partition": 0,
            "group" : "ws"
        },
        "redis": "127.0.0.1:6379",
        "backend_timeout": 1,
        "cache_timeout": 10,
        "depth_limit": [
            1,
            5,
            10,
            20,
            30,
            50,
            100
        ],
        "depth_merge": [
            "0",
            "0.0000000001",
            "0.000000001",
            "0.00000001",
            "0.0000001",
            "0.000001",
            "0.00001",
            "0.0001",
            "0.001",
            "0.01",
            "0.1"
        ]
    }
kind: ConfigMap
metadata:
  name: cex-ws-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  nginx.conf: |
    server {
      listen 80;
      resolver 127.0.0.1;
      add_header Strict-Transport-Security max-age=15768000;
      server_name system-server.user-system-{{ .Values.bfl.username }};
            
      location ^~ /ws/ {
          proxy_pass http://unix:/tmp/accessws.sock;
          proxy_redirect off;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_send_timeout 1d;
          proxy_read_timeout 1d;
          proxy_connect_timeout 1d;
          proxy_set_header X-Real-IP $remote_addr;

      }
    }

kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: socket-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: socket-config-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: waas-cex-ws-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: waas-cex-ws
spec:
  replicas: 1
  selector:
    matchLabels:
      app: waas-cex-ws
  template:
    metadata:
      labels:
        app: waas-cex-ws
    spec:
      volumes:
      - name: socket-dir
        persistentVolumeClaim:
          claimName: socket-pvc
      - name: ws-data
        persistentVolumeClaim:
          claimName: socket-config-pvc
      - name: ws-config
        configMap:
          name: cex-ws-config
          defaultMode: 438
          items:
          - key: config.json
            path: config.json
      - name: nginx-config
        configMap:
          name: nginx-config
          defaultMode: 438
          items:
          - key: nginx.conf
            path: nginx.conf
      initContainers:
        - name: init-config-data
          image: 'busybox:latest'
          command:
            - sh
            - '-c'
            - |
              cp /ws-config/config.json /ws-data/config.json && mkdir -p /ws-data/log/accessws
          resources: {}
          volumeMounts:
            - name: ws-config
              mountPath: /ws-config/config.json
              subPath: config.json
            - name: ws-data
              mountPath: /ws-data
          securityContext:
            runAsUser: 0
      containers:
      - name: waas-cex-ws
        image: ghcr.io/above-os/waas-cex-ws:latest
        volumeMounts:
        - name: socket-dir
          mountPath: /tmp
        - name: ws-data
          mountPath: /ws-data
        command:
            - sh
            - '-c'
            - |
              /entrypoint.sh /ws-data/config.json
          
      - name: nginx
        image: nginx:latest
        volumeMounts:
        - name: socket-dir
          mountPath: /tmp
        - name: nginx-config 
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: websocket-svc
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app:  waas-cex-ws
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: sys.bytetrade.io/v1alpha1
kind: ProviderRegistry
metadata:
  name: portfolio-ws-provider
  namespace: user-system-{{ .Values.bfl.username }}
spec:
  dataType: legacy_api
  deployment: waas-cex-ws-deployment
  description: {{ .Release.Name }} legacy websocket api
  endpoint: websocket-svc.{{ .Release.Namespace }}
  group: websocket.portfolio
  kind: provider
  namespace: {{ .Release.Namespace }}
  version: v1
  opApis:
  - name: GET
    uri: /ws/
status:
  state: active