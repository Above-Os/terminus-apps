{{ $mongo_rootpath := "/terminus/userdata/dbdata" }}

---
apiVersion: psmdb.percona.com/v1
kind: PerconaServerMongoDB
metadata:
  name: mongo-cluster
  namespace: {{ .Release.Namespace }}
spec:
  crVersion: 1.15.2
  image: percona/percona-server-mongodb:6.0.4-3
  imagePullPolicy: IfNotPresent
  allowUnsafeConfigurations: true
  initContainerSecurityContext:
    privileged: true
    runAsUser: 1001
  upgradeOptions:
    apply: disabled
    schedule: "0 2 * * *"
  secrets:
    users: mdb-cluster-name-secrets
  replsets:
    - name: rs0
      size: 1
      containerSecurityContext:
        privileged: true
        runAsUser: 1001
      podSecurityContext:
        fsGroup: 1001
      resources:
        limits:
          cpu: "1"
          memory: "2.5G"
        requests:
          cpu: "30m"
          memory: "0.5G"
      volumeSpec:
        hostPath:
          type: Directory
          path: {{ $mongo_rootpath }}/mdbdata
      livenessProbe:
        exec:
          command:
          - /opt/percona/mongodb-healthcheck
          - k8s
          - liveness
          - --startupDelaySeconds
          - "7200"
        failureThreshold: 4
        initialDelaySeconds: 60
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
  sharding:
    enabled: true

    configsvrReplSet:
      size: 1
      containerSecurityContext:
        privileged: true
        runAsUser: 1001
      podSecurityContext:
        fsGroup: 1001
      volumeSpec:
        hostPath:
          type: Directory
          path: {{ $mongo_rootpath }}/mdbdata-config
      resources:
        limits:
          cpu: "500m"
          memory: "2G"
        requests:
          cpu: "30m"
          memory: "0.5G"
      livenessProbe:
        exec:
          command:
          - /opt/percona/mongodb-healthcheck
          - k8s
          - liveness
          - --startupDelaySeconds
          - "7200"
        failureThreshold: 4
        initialDelaySeconds: 60
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10

    mongos:
      size: 1
      livenessProbe:
        exec:
          command:
          - /opt/percona/mongodb-healthcheck
          - k8s
          - liveness
          - --component
          - mongos
          - --startupDelaySeconds
          - "10"
        failureThreshold: 4
        initialDelaySeconds: 60
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      readinessProbe:
        exec:
          command:
          - /opt/percona/mongodb-healthcheck
          - k8s
          - readiness
          - --component
          - mongos
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1  
  backup:
    enabled: true
    image: beclab/percona-backup-mongo:2.2.2
    serviceAccountName: percona-server-mongodb-operator
    containerSecurityContext:
      privileged: true
      runAsUser: 1001
    podSecurityContext:
      fsGroup: 1001
#    resources:
#      limits:
#        cpu: "300m"
#        memory: "0.5G"
#      requests:
#        cpu: "300m"
#        memory: "0.5G"
    storages:
      s3-local:
        type: s3
        s3:
          bucket: mongo-backup
          credentialsSecret: mongo-cluster-backup-fakes3
          prefix: ""
          uploadPartSize: 10485760
          maxUploadParts: 10000
          storageClass: STANDARD
          insecureSkipTLSVerify: false
          endpointUrl: http://tapr-s3-svc.os-system:4568